FROM golang:alpine as builder

ARG cmd
ARG branch
ARG commit
ARG release=development
ENV bin=/usr/local/bin/$cmd
ENV GOOS=linux
ARG GITLAB_TOKEN

# install and configure git. we need it because some of our modules
# (e.g., egw-resource-model) are private
RUN apk add git
RUN git config --global url."https://oauth2:${GITLAB_TOKEN}@gitlab.com/acnodal".insteadOf https://gitlab.com/acnodal

WORKDIR /usr/src
COPY . ./

# build the executable
RUN go build -tags 'osusergo netgo' -o ${bin} \
-ldflags "-X purelb.io/internal/logging.release=${release} -X purelb.io/internal/logging.commit=${commit} -X purelb.io/internal/logging.branch=${branch}" \
./cmd/${cmd}/

FROM registry.access.redhat.com/ubi8/ubi:8.4 as runtime
ARG GITLAB_TOKEN
ARG cmd
ARG branch
ARG commit
ENV bin=/usr/local/bin/$cmd
ARG DEST=/opt/acnodal/bin

LABEL branch=${branch}
LABEL commit=${commit}
LABEL command=${cmd}

COPY --from=builder ${bin} ${bin}

RUN yum install -y bzip2 wget curl

# Install tcpdump in a weird way because UBI doesn't have it in their repo
RUN wget --no-verbose https://dl.rockylinux.org/pub/rocky/8/AppStream/x86_64/os/Packages/tcpdump-4.9.3-1.el8.x86_64.rpm
RUN yum install -y shadow-utils
RUN rpm -i tcpdump-4.9.3-1.el8.x86_64.rpm

# copy the packet forwarding components from the pfc project
WORKDIR /opt/acnodal
RUN curl -L -H "PRIVATE-TOKEN: ${GITLAB_TOKEN}" \
https://gitlab.com/api/v4/projects/acnodal%2Fepic%2Ftrue-ingress/jobs/1371800877/artifacts/pkg/true-ingress.tar.bz2 | \
tar -xjf -

# The softlink is because variable interpolation happens at run-time
# so if you have variables in the entrypoint string they won't get
# resolved to their values.  This lets us have a hard-coded entrypoint
# string that links to the image-specific command.
RUN ln -s ${bin} /usr/local/bin/cmd
ENTRYPOINT ["/usr/local/bin/cmd"]
